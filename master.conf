do {
	version-check;
	chassis-alarm-checks;
	system-alarm-checks;
	check_show_chassis_hardware;
	check_show_chassis_fpc;
	check_show_chassis_fpc_pic_status;	
	interface-all-physical-state;
	interface-ethernet-physical-extended;
	ospf-int-checks;
	ospf-checks;
	bgp-summary;
	route-check;
	lldp-neighbors;
}

version-check {
	command show version invoke-on all-routing-engines;
	iterate //software-information {
	id host-name;
		no-diff package-information[1]/comment {
		info Checking to see if version changed;
		err "Version was: %s", $PRE/package-information[1]/comment;
		err "Version now: %s", $POST/package-information[1]/comment;
		}
	}
}

chassis-alarm-checks {
	command show chassis alarms;
	item alarm-summary {
	not-exists active-alarm-count {
		info No chassis alarms;
		err "There are %s chassis alarms", active-alarm-count;
		}
	}
	iterate alarm-detail {
	id alarm-description;
	list-not-less {
		info Alarm Missing Post Change;
		err "Alarm clearted post change: %s", alarm-description;
		}
	list-not-more {
		info Alarm Added Post Change;
		err "Alarm appeared post change: %s", alarm-description;
		}      
	}
}

system-alarm-checks {
   command show system alarms;
   item alarm-summary {
      not-exists active-alarm-count {
         info No system alarms;
         err "There are %s system alarms", active-alarm-count;
      }
   }
   iterate alarm-detail {
      id alarm-description;
      list-not-less {
         info Alarm Missing Post Change;
         err "Alarm cleared post change: %s", alarm-description;
      }
      list-not-more {
         info Alarm Added Post Change;
         err "Alarm appeared post chage: %s", alarm-description;
      }      
   }
}


check_show_chassis_hardware {
   command show chassis hardware;
   iterate chassis/chassis-module {
   id name;
   no-diff name {
	info "Checking chassis modules names ...";
	err "	ERROR: the module %s has changed from %s to %s.", $ID.1, $PRE/name, $POST/name;
	}
   no-diff-in version {
	info "Checking chassis module version ...";
	err " ERROR: the version of the module %s has changed from %s to %s.", $ID.1, $PRE/version, $POST/version;
	}
   no-diff-in part-number {
	info "Checking chassis module part-number ...";
	err " ERROR: the part-number of module %s has changed from %s to %s.", $ID.1, $PRE/part-number, $POST/part-number;
	}
   no-diff-in serial-number {
	info "Checking chassis module serial-number ...";
	err " ERROR: the serial-number of module %s has changed from %s to %s.", $ID.1, $PRE/serial-number, $POST/serial-number;
	}
   no-diff description {
	info "Checking chassis module description ...";
	err " ERROR: the description of module %s has changed from %s to %s.", $ID.1, $PRE/description, $POST/description;
	}
   no-diff-in model-number {
	info "Checking chassis module model-number ...";
	err " ERROR: the model-number of module %s has changed from %s to %s.", $ID.1, $PRE/model-number, $POST/model-number;
	}
   list-not-less name {
	info "Checking for missing modules ...";
	err " ERROR: the module %s is missing.", $ID.1;
	}
   list-not-more name {
	info "Checking for new modules ...";
	err " ERROR: the module %s was installed.", $ID.1;
	}
   }
   iterate chassis/chassis-module/chassis-sub-module {
   id name;
   id ../name;
	no-diff name {
	info "Checking chassis sub-modules names ...";
	err "	ERROR: the sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/name, $POST/name;
	}
   no-diff-in version {
	info "Checking chassis sub-module version ...";
	err " ERROR: the version of the sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/version, $POST/version;
	}
   no-diff-in part-number {
	info "Checking chassis sub-module part-number ...";
	err " ERROR: the part-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/part-number, $POST/part-number;
	}
   no-diff-in serial-number {
	info "Checking chassis sub-module serial-number ...";
	err " ERROR: the serial-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/serial-number, $POST/serial-number;
	}
   no-diff description {
	info "Checking chassis sub-module description ...";
	err " ERROR: the description of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/description, $POST/description;
	}
   no-diff-in model-number {
	info "Checking chassis sub-module model-number ...";
	err " ERROR: the model-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/model-number, $POST/model-number;
	}
   list-not-less name {
	info "Checking for missing sub-modules ...";
	err " ERROR: the sub-module %s of module %s is missing.", $ID.1, $ID.2;
	}
   list-not-more name {
	info "Checking for new sub-modules ...";
	err " ERROR: the sub-module %s of module %s was installed.", $ID.1, $ID.2;
	}
   }
}

check_show_chassis_fpc {
   command show chassis fpc;
   iterate fpc {
   id slot;
   no-diff state {
	info "Checking FPC state ...";
	err " ERROR: the FPC %s has changed its state from %s to %s.", $ID.1, $PRE/state, $POST/state;
	}
   list-not-less {
	info "Checking for missing FPCs ...";
	err " ERROR: the FPC %s is missing.", $ID.1;
	}
   list-not-more {
	info "Checking for new FPCs ...";
	err " ERROR: the FPC %s was installed.", $ID.1;
	}
   }
}


check_show_chassis_fpc_pic_status {
   command show chassis fpc pic-status;
   iterate fpc/pic {
   id pic-slot;
   id ../slot;
   no-diff pic-type {
	info "Checking the PIC types ...";
	err " ERROR: the PIC type of PIC %s of FPC slot %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/pic-type, $POST/pic-type;
	}
   no-diff pic-state {
	info "Checking the PIC state ...";
	err " ERROR: the state of PIC %s of FPC slot %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/pic-state, $POST/pic-state;
	}
   list-not-less pic-slot {
	info "Checking for missing PICs ...";
	err " ERROR: the PIC %s of FPC slot %s is missing.", $ID.1, $ID.2;
	}
   list-not-more pic-slot {
	info "Checking for new PICs ...";
	err " ERROR: the PIC %s of FPC slot %s was installed.", $ID.1, $ID.2;
	}
   }
}


interface-all-physical-state {
        command show interface;
        iterate physical-interface {
        id name;
		list-not-less {
        		info "Checking for missing interfaces ...";
        		err " ERROR: the interface %s is missing.", $ID.1;
        	}
		list-not-more {
        		info "Checking for additional interfaces ...";
        		err " ERROR: the interface %s has been added.", $ID.1;
        	}
                no-diff oper-status {
                        info All Interfaces - Operational State Check;
                        err "Interface: %s changed oper state from: %s to: %s", name, $PRE/oper-status, $POST/oper-status;
                }
                no-diff admin-status {
                        info All Interfaces - Admin State Check;
                        err "Interface: %s changed admin state from: %s to: %s", name, $PRE/admin-status, $POST/admin-status;
                }
                no-diff-in duplex {
                        info All Interfaces - Duplex Check;
                        err "Interface: %s changed duplex from: %s to: %s", name, $PRE/duplex, $POST/duplex;
                }
                no-diff-in speed {
                        info All Interfaces - Speed Check;
                        err "Interface: %s changed speed from: %s to: %s", name, $PRE/speed, $POST/speed;
                }
                no-diff-in mtu {
                        info All Interfaces - MTU Check;
                        err "Interface: %s changed MTU from: %s to: %s", name, $PRE/mtu, $POST/mtu;
                }
        }
	iterate physical-interface/logical-interface {
	id name;
		no-diff-in oper-status {
			info Checking logical interfaces [oper-status];
			err "        ERROR: The interface is in different operational status than before: %s", $ID.1;
		}
		no-diff-in admin-status {
			info Checking logical interfaces [admin-status];
			err "        ERROR: The interface is in different admin status than before: %s", $ID.1;
		}
		list-not-less name {
			info Checking logical interfaces [missing interfaces];
			err "        ERROR: The interface %s is missing.", name; 
		}
		list-not-more name {
			info Checking logical interfaces [new interfaces];
			err "        ERROR: The interface %s was not present before.", name; 
		}
	}
}
interface-ethernet-physical-extended {
        command show interface "[gxf]e-*" extensive;
        iterate physical-interface {
        id name;
                no-diff ./input-error-list/input-errors {
                        info Ethernet Interfaces - Input Errors Check;
                        err "Interface: %s input-errors changed from: %s to: %s since last snapshot", name, $PRE/./input-error-list/input-errors, $POST/./input-error-list/input-errors;
                }
                no-diff ./input-error-list/input-drops {
                        info Ethernet Interfaces - Input Drops Check;
                        err "Interface: %s input-drops changed from: %s to: %s since last snapshot", name, $PRE/./input-error-list/input-drops, $POST/./input-error-list/input-drops;
                }
                no-diff ./input-error-list/framing-errors {
                        info Ethernet Interfaces - Input Framing Errors Check;
                        err "Interface: %s framing-errors changed from: %s to: %s since last snapshot", name, $PRE/./input-error-list/framing-errors, $POST/./input-error-list/framing-errors;
                }
                no-diff ./input-error-list/input-runts {
                        info Ethernet Interfaces - Input Runts Check;
                        err "Interface: %s input-runts changed from: %s to: %s since last snapshot", name, $PRE/./input-error-list/input-runts, $POST/./input-error-list/input-runts;
                }
                no-diff ./input-error-list/input-fifo-errors {
                        info Ethernet Interfaces - Input FIFO Errors Check;
                err "Interface: %s input-fifo-errors changed from: %s to: %s since last snapshot", name, $PRE/./input-error-list/input-fifo-errors, $POST/./input-error-list/input-fifo-errors;
                }
                no-diff ./output-error-list/output-collisions {
                        info Ethernet Interfaces - Output Collisions Check;
                        err "Interface: %s output-collisions changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/output-collisions, $POST/./output-error-list/output-collisions;
                }
                no-diff ./output-error-list/output-drops {
                        info Ethernet Interfaces - Output Drops;
                        err "Interface: %s output-drops changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/output-drops, $POST/./output-error-list/output-drops;
                }
                no-diff ./output-error-list/aged-packets {
                        info Ethernet Interfaces - Output Aged Packets Check;
                        err "Interface: %s aged-packets changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/aged-packets, $POST/./output-error-list/aged-packets;
                }
                no-diff ./output-error-list/mtu-errors {
                        info Ethernet Interfaces - Output MTU Errors Check;
                        err "Interface: %s mtu-errors changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/mtu-errors, $POST/./output-error-list/mtu-errors;
                }
                no-diff ./output-error-list/hs-link-crc-errors {
                        info Ethernet Interfaces - Output hs-link-crc-errors Check;
                        err "Interface: %s hs-link-crc-errors changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/hs-link-crc-errors, $POST/./output-error-list/hs-link-crc-errors;
                }
                no-diff ./output-error-list/output-fifo-errors {
                        info Ethernet Interfaces - Output FIFO Errors Check;
                        err "Interface: %s output-fifo-errors changed from: %s to: %s since last snapshot", name, $PRE/./output-error-list/output-fifo-errors, $POST/./output-error-list/output-fifo-errors;
                }

        }
}

ospf-int-checks {
   command show ospf interface "[axg]e-*";
   iterate ospf-interface {
      is-gt neighbor-count, 0 {
         info OSPF interfaces must have at least 1 neighbor;
         err "OSPF interface %s does not have any neighbors", interface-name;
      }
   }
}

ospf-checks {
   command show ospf neighbor;
   iterate ospf-neighbor {
      id interface-name;
      list-not-less {
         info OSPF interface list check;
         err "  OSPF interface gone missing: %s going to %s", interface-name, neighbor-address;
      }      
      list-not-more {
         info OSPF interface list check;
         err "  OSPF interface added: %s going to %s", interface-name, neighbor-address;
      }      
      no-diff neighbor-address {
         info OSPF neighbor change check;
         err "  OSPF interface %s neighbor changed!", interface-name;
         err "  was going to %s, now going to %s", $PRE/neighbor-address, $POST/neighbor-address;
      }
      is-equal ospf-neighbor-state, "Full" {
         info All OSPF neighbors are up;
         err "  OSPF neighbor on %s to %s is not up, rather %s", interface-name, neighbor-address, ospf-neighbor-state;
      }
      all-same neighbor-priority  {
         info OSPF neighbors must have the same priority value;
         err "  OSPF interface %s has mismatch priority %s", interface-name, neighbor-priority;
      }  
      no-diff ospf-neighbor-state {
         info NEI state no-change;
         err "  OSPF interface %s", interface-name;
         err "  OSPF nei-state PRE: %s", $PRE/ospf-neighbor-state;
         err "  OSPF nei-state POST: %s", $POST/ospf-neighbor-state;
      }
   }
}

bgp-summary {
    command show bgp summary;
    iterate bgp-peer {
        id peer-address;
        id description;
        no-diff peer-state {
                info Checking BGP peer status;
                err "        ERROR: The BGP peer %s (%s) is in a different state than before, it was %s and is now %s", $ID.1, $ID.2, $PRE/peer-state, $POST/peer-state;
           } 
        list-not-less peer-address {
                info Checking for lost BGP peers;
                err "        ERROR: The BGP peer %s (%s) is now missing.", $ID.1, $ID.2;
           } 
        list-not-more peer-address {
                info Checking for new BGP peer;
                err "        ERROR: The BGP peer %s (%s)  has been added.", $ID.1, $ID.2;
           } 
        no-diff peer-as {
                info Checking for BGP peer AS changes;
                err "        ERROR: The BGP peer %s (%s) is in a different AS than before, it was %s and is now %s", $ID.1, $ID.2, $PRE/peer-as, $POST/peer-as;
           } 
	}
   iterate bgp-peer/bgp-rib {
	id ../peer-address;
	id ../peer-as;
	id name;
	list-not-less name {
		info Checking if BGP RIB's still exist;
		err "	ERROR: The RIB of %s for BGP peer %s (AS %s) has disapeared.", $ID.3, $ID.1, $ID.2;
	   }
	list-not-more name {
		info Checking for new BGP RIB's;
		err "	ERROR: New RIB of %s for BGP peer %s (AS %s) has been found.", $ID.3, $ID.1, $ID.2;
	   }
        no-diff-in active-prefix-count {
                info Checking BGP Active Prefix count;
                err "	ERROR: The BGP peer %s, RIB %s, active prefix count has changed. It was %s and is now %s", $ID.1, $ID.3, $PRE/active-prefix-count, $POST/active-prefix-count;
           } 
        no-diff-in received-prefix-count {
                info Checking BGP Recived Prefix count;
                err "        ERROR: The BGP peer %s, RIB %s received prefix count has changed. It was %s and is now %s", $ID.1, $ID.3, $PRE/received-prefix-count, $POST/received-prefix-count;
           } 
        no-diff-in accepted-prefix-count {
                info Checking BGP Accepted Prefix count;
                err "        ERROR: The BGP peer %s, RIB %s accpeted prefix count has changed. It was %s and is now %s", $ID.1, $ID.3, $PRE/accepted-prefix-count, $POST/accepted-prefix-count;
           } 
        no-diff suppressed-prefix-count {
                info Checking BGP Suppressed Prefix count;
                err "        ERROR: The BGP peer %s, RIB %s suppressed prefix count has changed. It was %s and is now %s", $ID.1, $ID.3, $PRE/suppressed-prefix-count, $POST/suppressed-prefix-count;
           } 
    }
}

route-check {
        command show route;
        iterate route-table/rt {
        id rt-destination;
        id ../table-name;
                list-not-less rt-destination {
                        info Route Table - Missing Network Destinations Check;
                        err "Network missing in table %s: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.2, $ID.1, rt-entry/nh/to, rt-entry/nh/via, rt-entry/protocol-name, rt-entry/nh/mpls-label;
                }
                list-not-more rt-destination {
                        info Route Table - Additional Network Destinations Check;
                        err "Network added in table %s: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.2, $ID.1, rt-entry/nh/to, rt-entry/nh/via, rt-entry/protocol-name, rt-entry/nh/mpls-label;
                }
                no-diff-in rt-entry/nh/to {
                        info Route Table - Next Hop Changes Check;
                        err "Next Hop for %s in table %s has changed!", $ID.1, $ID.2;
                        err "Was: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $PRE/rt-entry/nh/to, $PRE/rt-entry/nh/via, $PRE/rt-entry/protocol-name, $PRE/rt-entry/nh/mpls-label;
                        err "Now: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $POST/rt-entry/nh/to, $POST/rt-entry/nh/via, $POST/rt-entry/protocol-name, $POST/rt-entry/nh/mpls-label;
                }
                no-diff-in rt-entry/nh/via {
                        info Route Table - Outgoing Interfaces Changes Check;
                        err "Outgoing Interface for %s in table %s has changed!", $ID.1, $ID.2;
                        err "Was: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $PRE/rt-entry/nh/to, $PRE/rt-entry/nh/via, $PRE/rt-entry/protocol-name, $PRE/rt-entry/nh/mpls-label;
                        err "Now: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $POST/rt-entry/nh/to, $POST/rt-entry/nh/via, $POST/rt-entry/protocol-name, $POST/rt-entry/nh/mpls-label;
                }
                no-diff-in rt-entry/protocol-name {
                        info Route Table - Protocol Changes Check;
                        err "Protocol for %s in table %s has changed!", $ID.1, $ID.2;
                        err "Was: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $PRE/rt-entry/nh/to, $PRE/rt-entry/nh/via, $PRE/rt-entry/protocol-name, $PRE/rt-entry/nh/mpls-label;
                        err "Now: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s", $ID.1, $POST/rt-entry/nh/to, $POST/rt-entry/nh/via, $POST/rt-entry/protocol-name, $POST/rt-entry/nh/mpls-label;
                }
                no-diff-in rt-entry/as-path {
                        info Route Table - AS Path Changes Check;
                        err "AS Path for %s in table %s has changed!", $ID.1, $ID.2;
                        err "Was: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s AS Path: %s", $ID.1, $PRE/rt-entry/nh/to, $PRE/rt-entry/nh/via, $PRE/rt-entry/protocol-name, $PRE/rt-entry/nh/mpls-label, $PRE/rt-entry/as-path;
                        err "Now: NET %s Next-Hop: %s Interface: %s Protocol: %s Label: %s AS Path: %s", $ID.1, $POST/rt-entry/nh/to, $POST/rt-entry/nh/via, $POST/rt-entry/protocol-name, $POST/rt-entry/nh/mpls-label, $POST/rt-entry/as-path;
                }
        }
}
lldp-neighbors {
        command show lldp neighbors;
        iterate lldp-neighbor-information {
        id lldp-local-port-id;
        id lldp-remote-system-name;
                list-not-less lldp-remote-system-name {
                        info Checking for lost LLDP neighbors;
                        err "LLDP Neighbor %s on interface %s is missing", $ID.2, $ID.1;
                }
                list-not-more lldp-remote-system-name {
                        info Checking for new LLDP neighbors;
                        err "LLDP Neighbor %s on interface %s has been added", $ID.2, $ID.1;
                }
        }
}


