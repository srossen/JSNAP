do {
	version-check;
	chassis-alarm-checks;
	system-alarm-checks;
	check_show_chassis_hardware;
	check_show_chassis_fpc;
	check_show_chassis_fpc_pic_status;	
	interface-all-physical-state;
}

version-check {
   command show version invoke-on all-routing-engines;
   iterate //software-information {
      id host-name;
      no-diff package-information[1]/comment {
         info Checking to see if version changed;
         err "Version was: %s", $PRE/package-information[1]/comment;
         err "Version now: %s", $POST/package-information[1]/comment;
      }
   }
}

chassis-alarm-checks {
   command show chassis alarms;
   item alarm-summary {
      not-exists active-alarm-count {
         info No chassis alarms;
         err "There are %s chassis alarms", active-alarm-count;
      }
   }
   iterate alarm-detail {
      id alarm-description;
      list-not-less {
         info Alarm Missing Post Change;
         err "Alarm clearted post change: %s", alarm-description;
      }
      list-not-more {
         info Alarm Added Post Change;
         err "Alarm appeared post change: %s", alarm-description;
      }      
   }
}

system-alarm-checks {
   command show system alarms;
   item alarm-summary {
      not-exists active-alarm-count {
         info No system alarms;
         err "There are %s system alarms", active-alarm-count;
      }
   }
   iterate alarm-detail {
      id alarm-description;
      list-not-less {
         info Alarm Missing Post Change;
         err "Alarm cleared post change: %s", alarm-description;
      }
      list-not-more {
         info Alarm Added Post Change;
         err "Alarm appeared post chage: %s", alarm-description;
      }      
   }
}


check_show_chassis_hardware {
   command show chassis hardware;
   iterate chassis/chassis-module {
   id name;
   no-diff name {
	info "Checking chassis modules names ...";
	err "	ERROR: the module %s has changed from %s to %s.", $ID.1, $PRE/name, $POST/name;
	}
   no-diff-in version {
	info "Checking chassis module version ...";
	err " ERROR: the version of the module %s has changed from %s to %s.", $ID.1, $PRE/version, $POST/version;
	}
   no-diff-in part-number {
	info "Checking chassis module part-number ...";
	err " ERROR: the part-number of module %s has changed from %s to %s.", $ID.1, $PRE/part-number, $POST/part-number;
	}
   no-diff-in serial-number {
	info "Checking chassis module serial-number ...";
	err " ERROR: the serial-number of module %s has changed from %s to %s.", $ID.1, $PRE/serial-number, $POST/serial-number;
	}
   no-diff description {
	info "Checking chassis module description ...";
	err " ERROR: the description of module %s has changed from %s to %s.", $ID.1, $PRE/description, $POST/description;
	}
   no-diff-in model-number {
	info "Checking chassis module model-number ...";
	err " ERROR: the model-number of module %s has changed from %s to %s.", $ID.1, $PRE/model-number, $POST/model-number;
	}
   list-not-less name {
	info "Checking for missing modules ...";
	err " ERROR: the module %s is missing.", $ID.1;
	}
   list-not-more name {
	info "Checking for new modules ...";
	err " ERROR: the module %s was installed.", $ID.1;
	}
   }
   iterate chassis/chassis-module/chassis-sub-module {
   id name;
   id ../name;
	no-diff name {
	info "Checking chassis sub-modules names ...";
	err "	ERROR: the sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/name, $POST/name;
	}
   no-diff-in version {
	info "Checking chassis sub-module version ...";
	err " ERROR: the version of the sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/version, $POST/version;
	}
   no-diff part-number {
	info "Checking chassis sub-module part-number ...";
	err " ERROR: the part-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/part-number, $POST/part-number;
	}
   no-diff serial-number {
	info "Checking chassis sub-module serial-number ...";
	err " ERROR: the serial-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/serial-number, $POST/serial-number;
	}
   no-diff description {
	info "Checking chassis sub-module description ...";
	err " ERROR: the description of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/description, $POST/description;
	}
   no-diff-in model-number {
	info "Checking chassis sub-module model-number ...";
	err " ERROR: the model-number of sub-module %s of module %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/model-number, $POST/model-number;
	}
   list-not-less name {
	info "Checking for missing sub-modules ...";
	err " ERROR: the sub-module %s of module %s is missing.", $ID.1, $ID.2;
	}
   list-not-more name {
	info "Checking for new sub-modules ...";
	err " ERROR: the sub-module %s of module %s was installed.", $ID.1, $ID.2;
	}
   }
}

check_show_chassis_fpc {
   command show chassis fpc;
   iterate fpc {
   id slot;
   no-diff state {
	info "Checking FPC state ...";
	err " ERROR: the FPC %s has changed its state from %s to %s.", $ID.1, $PRE/state, $POST/state;
	}
   list-not-less {
	info "Checking for missing FPCs ...";
	err " ERROR: the FPC %s is missing.", $ID.1;
	}
   list-not-more {
	info "Checking for new FPCs ...";
	err " ERROR: the FPC %s was installed.", $ID.1;
	}
   }
}


check_show_chassis_fpc_pic_status {
   command show chassis fpc pic-status;
   iterate fpc/pic {
   id pic-slot;
   id ../slot;
   no-diff pic-type {
	info "Checking the PIC types ...";
	err " ERROR: the PIC type of PIC %s of FPC slot %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/pic-type, $POST/pic-type;
	}
   no-diff pic-state {
	info "Checking the PIC state ...";
	err " ERROR: the state of PIC %s of FPC slot %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/pic-state, $POST/pic-state;
	}
   list-not-less pic-slot {
	info "Checking for missing PICs ...";
	err " ERROR: the PIC %s of FPC slot %s is missing.", $ID.1, $ID.2;
	}
   list-not-more pic-slot {
	info "Checking for new PICs ...";
	err " ERROR: the PIC %s of FPC slot %s was installed.", $ID.1, $ID.2;
	}
   }
}


interface-all-physical-state {
        command show interface;
        iterate physical-interface {
        id name;
                no-diff oper-status {
                        info All Interfaces - Operational State Check;
                        err "Interface: %s changed oper state from: %s to: %s", name, $PRE/oper-status, $POST/oper-status;
                }
                no-diff admin-status {
                        info All Interfaces - Admin State Check;
                        err "Interface: %s changed admin state from: %s to: %s", name, $PRE/admin-status, $POST/admin-status;
                }
                no-diff-in duplex {
                        info All Interfaces - Duplex Check;
                        err "Interface: %s changed duplex from: %s to: %s", name, $PRE/duplex, $POST/duplex;
                }
                no-diff-in speed {
                        info All Interfaces - Speed Check;
                        err "Interface: %s changed speed from: %s to: %s", name, $PRE/speed, $POST/speed;
                }
                no-diff-in mtu {
                        info All Interfaces - MTU Check;
                        err "Interface: %s changed MTU from: %s to: %s", name, $PRE/mtu, $POST/mtu;
                }
        }
}

